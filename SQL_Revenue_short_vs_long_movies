WITH FilmLengthCategories AS (			
  SELECT			
    film_id,			
    CASE			
      WHEN length <= (SELECT MIN(length) FROM film) THEN 'Shortest Length Films'			
      WHEN length >= (SELECT MAX(length) FROM film) THEN 'Longest Length Films'			
      ELSE 'Other Films'			
    END AS FilmLengthCategory			
  FROM film			
),			
SalesByLength AS (			
  SELECT			
    flc.FilmLengthCategory,			
    COUNT(r.rental_id) AS RentalCount, -- Added line for rental count			
    SUM(p.amount) AS TotalSales			
  FROM rental r			
  INNER JOIN inventory i ON r.inventory_id = i.inventory_id			
  INNER JOIN FilmLengthCategories flc ON i.film_id = flc.film_id			
  INNER JOIN payment p ON r.rental_id = p.rental_id			
  WHERE flc.FilmLengthCategory IN ('Shortest Length Films', 'Longest Length Films')			
  GROUP BY flc.FilmLengthCategory			
)			
			
#Query Explained#		
#The SQL query identifies the shortest and longest films in the database and calculates the number of rentals and total sales for these two categories, excluding all other film lengths from the analysis. 
#It uses conditional logic to categorize films and aggregates data to provide insights into the performance of films at extreme lengths.
